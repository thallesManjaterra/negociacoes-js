{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","constructor","connection","_connection","_store","adiciona","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","e","onerror","console","log","target","error","listaTodos","negociacoes","cursor","openCursor","atual","result","value","_data","_quantidade","_valor","push","continue","apagaTodos","clear"],"mappings":";;;;;;AAASA,sB,iBAAAA,U;;;AACF,kBAAMC,aAAN,CAAoB;AACvBC,4BAAYC,UAAZ,EAAwB;AACpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;AACDC,yBAASC,UAAT,EAAqB;AACjB,2BAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,UAAU,KAAKP,WAAL,CACfQ,WADe,CACH,CAAC,KAAKP,MAAN,CADG,EACY,WADZ,EAEfQ,WAFe,CAEH,KAAKR,MAFF,EAGfS,GAHe,CAGXP,UAHW,CAAhB;AAIAI,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;AACAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,uCAAP;AACH,yBAHD;AAIH,qBAVM,CAAP;AAWH;AACDY,6BAAa;AACT,2BAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMa,cAAc,EAApB;AACA,8BAAMC,SAAS,KAAKpB,WAAL,CACdQ,WADc,CACF,CAAC,KAAKP,MAAN,CADE,EACY,WADZ,EAEdQ,WAFc,CAEF,KAAKR,MAFH,EAGdoB,UAHc,EAAf;AAIAD,+BAAOT,SAAP,GAAmBC,KAAK;AACpB,kCAAMU,QAAQV,EAAEI,MAAF,CAASO,MAAvB;AACA,gCAAGD,KAAH,EAAU;AACN,sCAAMnB,aAAa,IAAIP,UAAJ,CACf0B,MAAME,KAAN,CAAYC,KADG,EAEfH,MAAME,KAAN,CAAYE,WAFG,EAGfJ,MAAME,KAAN,CAAYG,MAHG,CAAnB;AAIIR,4CAAYS,IAAZ,CAAiBzB,UAAjB;AACAmB,sCAAMO,QAAN;AACH,6BAPL,MAOW;AACH;AACAxB,wCAAQc,WAAR;AACH;AACJ,yBAbL;AAcIC,+BAAOP,OAAP,GAAiBD,KAAK;AAClBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,yCAAP;AACH,yBAHD;AAIH,qBAxBE,CAAP;AAyBC;AACDwB,6BAAa;AACT,2BAAO,IAAI1B,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,8BAAMC,UAAU,KAAKP,WAAL,CACfQ,WADe,CACH,CAAC,KAAKP,MAAN,CADG,EACY,WADZ,EAEfQ,WAFe,CAEH,KAAKR,MAFF,EAGf8B,KAHe,EAAhB;AAIAxB,gCAAQI,SAAR,GAAoBC,KAAKP,SAAzB;AACAE,gCAAQM,OAAR,GAAkBD,KAAK;AACnBE,oCAAQC,GAAR,CAAYH,EAAEI,MAAF,CAASC,KAArB;AACAX,mCAAO,wCAAP;AACH,yBAHD;AAIH,qBAVM,CAAP;AAWH;AAzDkB","file":"NegociacaoDao.js","sourcesContent":["import { Negociacao } from './Negociacao.js';\nexport class NegociacaoDao {\n    constructor(connection) {\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n    adiciona(negociacao) {\n        return new Promise((resolve, reject) => {\n            const request = this._connection\n            .transaction([this._store], 'readwrite')\n            .objectStore(this._store)\n            .add(negociacao)\n            request.onsuccess = e => resolve();\n            request.onerror = e => {\n                console.log(e.target.error);\n                reject('Não foi possível salvar a negociação!')\n            }\n        });\n    }\n    listaTodos() {\n        return new Promise((resolve, reject) => {\n            const negociacoes = [];\n            const cursor = this._connection\n            .transaction([this._store],'readwrite')\n            .objectStore(this._store)\n            .openCursor();\n            cursor.onsuccess = e => {\n                const atual = e.target.result;\n                if(atual) {\n                    const negociacao = new Negociacao(\n                        atual.value._data,\n                        atual.value._quantidade,\n                        atual.value._valor);\n                        negociacoes.push(negociacao);\n                        atual.continue();\n                    } else {\n                        // resolvendo a promise com negociacoes\n                        resolve(negociacoes);\n                    }\n                }\n                cursor.onerror = e => {\n                    console.log(e.target.error);\n                    reject('Não foi possível listar nas negociações');\n                }\n            });\n        }\n        apagaTodos() {\n            return new Promise((resolve, reject) => {\n                const request = this._connection\n                .transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n                request.onsuccess = e => resolve();\n                request.onerror = e => {\n                    console.log(e.target.error);\n                    reject('Não foi possível apagar as negociações');\n                };\n            });\n        }\n    }\n"]}