{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","x","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","periodo","Promise","all","reduce","acc","concat","sort","y","getTime","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAEIC,iB,GAAN,MAAMA,iBAAN,CAAwB;AAC3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;AACDK,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CACNE,GADM,CACF,oBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACDC,mDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CACNE,GADM,CACF,sBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACDE,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CACNE,GADM,CACF,uBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACKG,yCAAN,GAAkC;AAAA;;AAAA;AAC9B,4BAAI;AACA,gCAAIC,UAAU,MAAMC,QAAQC,GAAR,CAAY,CAC5B,MAAKjB,wBAAL,EAD4B,EAE5B,MAAKY,gCAAL,EAF4B,EAG5B,MAAKC,iCAAL,EAH4B,CAAZ,CAApB;AAKA,mCAAOE,QACFG,MADE,CACK,UAACC,GAAD,EAAMd,CAAN;AAAA,uCAAYc,IAAIC,MAAJ,CAAWf,CAAX,CAAZ;AAAA,6BADL,EAEFgB,IAFE,CAEG,UAAChB,CAAD,EAAIiB,CAAJ;AAAA,uCAAUA,EAAEf,IAAF,CAAOgB,OAAP,GAAiBlB,EAAEE,IAAF,CAAOgB,OAAP,EAA3B;AAAA,6BAFH,CAAP;AAGH,yBATD,CASE,OAAMb,GAAN,EAAW;AACTc,oCAAQC,GAAR,CAAYf,GAAZ;AACA,kCAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH;AAb6B;AAcjC;AA5D0B,a","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n    obterNegociacoesDaSemana() {\n        return this._http\n        .get('negociacoes/semana')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http\n        .get('negociacoes/anterior')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http\n        .get('negociacoes/retrasada')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    async obterNegociacoesDoPeriodo() {\n        try {\n            let periodo = await Promise.all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()\n            ]);\n            return periodo\n                .reduce((acc, x) => acc.concat(x))\n                .sort((x, y) => y.data.getTime - x.data.getTime());\n        } catch(err) {\n            console.log(err);\n            throw new Error('Não foi possível obter as negociações do período')\n        }\n    }\n}\n/* ESTADOS\n0: requisição ainda não iniciada;\n1: conexão com o servidor estabelecida;\n2: requisição recebida;\n3: processando requisição;\n4: requisição está concluída e a resposta está pronta.\n*/\n"]}