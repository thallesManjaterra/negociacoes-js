{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","map","x","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","Promise","all","periodo","reduce","y","concat","sort","getTime","catch","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iBAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;AAC3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;AACDK,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CACNE,GADM,CACF,oBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACDC,mDAAmC;AAC/B,2BAAO,KAAKb,KAAL,CACNE,GADM,CACF,sBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACDE,oDAAoC;AAChC,2BAAO,KAAKd,KAAL,CACNE,GADM,CACF,uBADE,EAENC,IAFM,CAGHC,SAASA,MAAMC,GAAN,CAAUC,KAAK,IAAIT,UAAJ,CACpB,IAAIU,IAAJ,CAASD,EAAEE,IAAX,CADoB,EAEpBF,EAAEG,UAFkB,EAGpBH,EAAEI,KAHkB,CAAf,CAHN,EAQHC,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,wCAAV,CAAN;AACH,qBAVE,CAAP;AAYH;AACDG,4CAA4B;AACxB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKhB,wBAAL,EADe,EAEf,KAAKY,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAKNX,IALM,CAMHe,WAAWA,QAAQC,MAAR,CAAe,CAACb,CAAD,EAAIc,CAAJ,KAAUd,EAAEe,MAAF,CAASD,CAAT,CAAzB,EACVE,IADU,CACL,CAAChB,CAAD,EAAIc,CAAJ,KAAUA,EAAEZ,IAAF,CAAOe,OAAP,KAAmBjB,EAAEE,IAAF,CAAOe,OAAP,EADxB,CANR,EASNC,KATM,CAUHb,OAAO;AACHc,gCAAQC,GAAR,CAAYf,GAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBAbE,CAAP;AAeH;AA9D0B;AAgE/B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from './Negociacao.js';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n    obterNegociacoesDaSemana() {\n        return this._http\n        .get('negociacoes/semana')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http\n        .get('negociacoes/anterior')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http\n        .get('negociacoes/retrasada')\n        .then(\n            dados => dados.map(x => new Negociacao(\n                new Date(x.data),\n                x.quantidade,\n                x.valor\n            )),\n            err => {\n                throw new Error('Não foi possível obter as negociações.');\n            }\n        );\n    }\n    obterNegociacoesDoPeriodo() {\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ])\n        .then(\n            periodo => periodo.reduce((x, y) => x.concat(y))\n            .sort((x, y) => y.data.getTime() - x.data.getTime())\n        )\n        .catch(\n            err => {\n                console.log(err);\n                throw new Error('Não foi possível obter as negociações do período')\n            }\n        )\n    }\n}\n/* ESTADOS\n0: requisição ainda não iniciada;\n1: conexão com o servidor estabelecida;\n2: requisição recebida;\n3: processando requisição;\n4: requisição está concluída e a resposta está pronta.\n*/\n"]}