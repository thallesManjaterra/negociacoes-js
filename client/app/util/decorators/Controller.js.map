{"version":3,"sources":["../../../app-src/util/decorators/Controller.js"],"names":["controller","seletores","elements","map","seletor","document","querySelector","constructor","constructorOriginal","constructorNovo","instance","Object","getOwnPropertyNames","prototype","forEach","property","Reflect","hasMetadata","associaEvento","getMetadata","metadado","selector","addEventListener","event","prevent","preventDefault","propertyKey"],"mappings":";;;AAAO,aAASA,UAAT,CAAoB,GAAGC,SAAvB,EAAkC;AACrC,cAAMC,WAAWD,UAAUE,GAAV,CAAcC,WAC3BC,SAASC,aAAT,CAAuBF,OAAvB,CADa,CAAjB;AAEI,eAAO,UAAUG,WAAV,EAAuB;AAC1B,kBAAMC,sBAAsBD,WAA5B;AACA,kBAAME,kBAAkB,YAAY;AAChC,sBAAMC,WAAW,IAAIF,mBAAJ,CAAwB,GAAGN,QAA3B,CAAjB;AACAS,uBACCC,mBADD,CACqBJ,oBAAoBK,SADzC,EAECC,OAFD,CAESC,YAAY;AACjB,wBAAIC,QAAQC,WAAR,CAAoB,WAApB,EAAiCP,QAAjC,EAA2CK,QAA3C,CAAJ,EAA0D;AACtDG,sCAAcR,QAAd,EAAwBM,QAAQG,WAAR,CAAoB,WAApB,EAAiCT,QAAjC,EAA2CK,QAA3C,CAAxB;AACH;AACJ,iBAND;AAOH,aATD;AAUAN,4BAAgBI,SAAhB,GAA4BL,oBAAoBK,SAAhD;AACA,mBAAOJ,eAAP;AACH,SAdD;AAeH;;0BAlBWT,U;;AAmBZ,aAASkB,aAAT,CAAuBR,QAAvB,EAAiCU,QAAjC,EAA2C;AACvCf,iBACCC,aADD,CACec,SAASC,QADxB,EAECC,gBAFD,CAEkBF,SAASG,KAF3B,EAEkCA,SAAS;AACvC,gBAAGH,SAASI,OAAZ,EAAqBD,MAAME,cAAN;AACrBf,qBAASU,SAASM,WAAlB,EAA+BH,KAA/B;AACH,SALD;AAMH","file":"Controller.js","sourcesContent":["export function controller(...seletores) {\n    const elements = seletores.map(seletor =>\n        document.querySelector(seletor));\n        return function (constructor) {\n            const constructorOriginal = constructor;\n            const constructorNovo = function () {\n                const instance = new constructorOriginal(...elements);\n                Object\n                .getOwnPropertyNames(constructorOriginal.prototype)\n                .forEach(property => {\n                    if (Reflect.hasMetadata('bindEvent', instance, property)) {\n                        associaEvento(instance, Reflect.getMetadata('bindEvent', instance, property));\n                    }\n                });\n            }\n            constructorNovo.prototype = constructorOriginal.prototype;\n            return constructorNovo;\n        }\n    }\n    function associaEvento(instance, metadado) {\n        document\n        .querySelector(metadado.selector)\n        .addEventListener(metadado.event, event => {\n            if(metadado.prevent) event.preventDefault();\n            instance[metadado.propertyKey](event);\n        });\n    }\n"]}